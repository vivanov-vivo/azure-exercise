trigger:
- main

pool:
  name: vivanovpc # Replace with your actual self-hosted agent pool name

jobs:
- job: DeployResources
  displayName: 'Deploy Storage Accounts and VM'
  pool:
    name: vivanovpc # Replace with your actual self-hosted agent pool name
  steps:
  
  # Step 2: Install Azure CLI (if not already installed on the self-hosted agent)
  - task: AzureCLI@2
    inputs:
      azureSubscription: $(azureSubscription)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Check if Azure CLI is installed
        if ! command -v az &> /dev/null
        then
          echo "Azure CLI is not installed. Installing Azure CLI..."
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          sudo apt-get install -y azure-cli
        else
          echo "Azure CLI is already installed. Skipping installation."
        fi

  # Step 3: Check if the resource group exists, if not, create it
  - task: AzureCLI@2
    inputs:
      azureSubscription: $(azureSubscription)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        RESOURCE_GROUP=$(resourceGroup)
        LOCATION=$(location)
        
        # Check if the resource group exists
        RG_EXISTS=$(az group show --name $RESOURCE_GROUP --query "name" --output tsv)
        
        if [ -z "$RG_EXISTS" ]; then
          echo "Resource group does not exist. Creating resource group..."
          az group create --name $RESOURCE_GROUP --location $LOCATION
        else
          echo "Resource group '$RESOURCE_GROUP' already exists. Skipping creation."
        fi

  # Step 4: Deploy Storage Account A using Azure CLI
  - task: AzureCLI@2
    inputs:
      azureSubscription: $(azureSubscription)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "Deploying Storage Account A..."
        az deployment group create \
          --resource-group $(resourceGroup) \
          --template-file $(Build.SourcesDirectory)/files/arm-template-storage-account.json \
          --parameters $(Build.SourcesDirectory)/files/parameters_store_a.json

  # Step 5: Deploy Storage Account B using Azure CLI
  - task: AzureCLI@2
    inputs:
      azureSubscription: $(azureSubscription)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "Deploying Storage Account B..."
        az deployment group create \
          --resource-group $(resourceGroup) \
          --template-file $(Build.SourcesDirectory)/files/arm-template-storage-account.json \
          --parameters $(Build.SourcesDirectory)/files/parameters_store_b.json

  # Step 6: Deploy Linux VM using Azure CLI
  - task: AzureCLI@2
    inputs:
      azureSubscription: $(azureSubscription)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "Deploying Linux VM..."
        az deployment group create \
          --resource-group $(resourceGroup) \
          --template-file $(Build.SourcesDirectory)/files/arm-template2-vm-linux.json \
          --parameters $(Build.SourcesDirectory)/files/parametersVM.json
